#+TITLE:  Emacs Settings for Web Programming
#+AUTHOR: Einars Vilnis
#+EMAIL:  vilniseinrs@gmail.com

* Modes

  I need these packages installed:

  #+BEGIN_SRC emacs-lisp
    (use-package web-mode
    :ensure t
    :config
    (add-to-list 'auto-mode-alist '("\\.html?\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.html\\.erb\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.mustache\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.jinja\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.php\\'" . web-mode))
    (add-to-list 'auto-mode-alist '("\\.tsx\\'" . web-mode))
    (setq web-mode-engines-alist
          '(("django"   . "\\.html\\'")))
    (setq web-mode-enable-auto-closing t))

  (defun my-setup-indent (n)
    ;; java/c/c++
    (setq c-basic-offset n)
    ;; web development
    (setq coffee-tab-width n) ; coffeescript
    (setq javascript-indent-level n) ; javascript-mode
    (setq js-indent-level n) ; js-mode
    (setq js2-basic-offset n) ; js2-mode, in latest js2-mode, it's alias of js-indent-level
    (setq web-mode-markup-indent-offset n) ; web-mode, html tag in html file
    (setq web-mode-css-indent-offset n) ; web-mode, css in html file
    (setq web-mode-code-indent-offset n) ; web-mode, js code in html file
    (setq css-indent-offset n) ; css-mode
    )

  (my-setup-indent 2) ; indent 2 spaces width

  (use-package tide
    :ensure t
    :config
    (defun setup-tide-mode ()
      (interactive)
      (tide-setup)
      (flycheck-mode +1)
      (setq flycheck-check-syntax-automatically '(save mode-enabled))
      (eldoc-mode +1)
      (tide-hl-identifier-mode +1)
      (company-mode +1)))


  (use-package emmet-mode
    :ensure t
    :config
    (add-hook 'sqml-mode-hook 'emmet-mode)
    (add-hook 'web-mode-hook 'emmet-mode)
    (add-hook 'css-mode-hook 'emmet-mode)
  )
(use-package yasnippet
   :ensure t
   :init
(yas-global-mode 1))
  #+END_SRC

  Simply turn on the =impatient-mode= for any buffer that should be
  /served/ and then pop over to http://localhost:8888/imp/

#+BEGIN_SRC emacs-lisp
(provide 'emacs-web)
#+END_SRC
